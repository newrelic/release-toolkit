name: Self-test
on:
  pull_request:

jobs:
  is-held:
    name: is-held action
    runs-on: ubuntu-latest
    env:
      MOCK_REPO: ./mock_repo
    steps:
      - uses: actions/checkout@v3
      - name: Configure test repo
        id: repo
        shell: bash
        run: |
          mkdir $MOCK_REPO
          cd $MOCK_REPO

          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

          git init
          for i in 1 2 3; do
            touch file$i
            git add file$i
            git commit -m commit_$i
          done
          
          cat > changes.yaml <<EOF
          held: true
          EOF

          cat > CHANGELOG.md <<EOF
          # Changelog
          The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
          and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

          ## Unreleased
          ### Changed
          - Added new feature here

          ## 1.0.0 - 2017-06-20
          ### Added
          - New visual identity by [@tylerfortune8](https://github.com/tylerfortune8).
          EOF
      - uses: ./is-held
        id: held
        with:
          yaml: ${{ env.MOCK_REPO }}/changes.yaml
      - run: |
          if [[ "${{ steps.held.outputs.is-held }}" != "true" ]]; then
            echo "is-held should have returned true" >&2
            exit 1
          fi

  generate-changes-file:
    name: generate-changes-file action
    runs-on: ubuntu-latest
    env:
      MOCK_REPO: ./mock_repo
    steps:
      - uses: actions/checkout@v3
      - name: Configure test repo
        id: repo
        shell: bash
        run: |
          mkdir $MOCK_REPO
          cd $MOCK_REPO

          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

          git init
          for i in 1 2 3; do
            touch file$i
            git add file$i
            git commit -m commit_$i
          done

          cat > CHANGELOG.md <<EOF
          # Changelog
          The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
          and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

          ## Unreleased
          ### Enhancements
          - Added new feature here

          ## 1.0.0 - 2017-06-20
          ### Added
          - New visual identity by [@tylerfortune8](https://github.com/tylerfortune8).
          EOF
      - uses: ./generate-changes-file
        with:
          yaml: ${{ env.MOCK_REPO }}/changes.yaml
          markdown: ${{ env.MOCK_REPO }}/CHANGELOG.md
          git-root: ${{ env.MOCK_REPO }}
      - run: |
          cat $MOCK_REPO/changes.yaml

          if [[ $(cat $MOCK_REPO/changes.yaml | wc -c) -eq 0 ]]; then
            echo "changes.yaml should not be empty" >&2
            exit 1
          fi
          
          if grep -e 'changes: \[\]' $MOCK_REPO/changes.yaml; then
            echo "changes.yaml should not have an empty changes section" >&2
            exit 2
          fi

  generate-changes-file-empty:
    name: generate-changes-file action empty changelog
    runs-on: ubuntu-latest
    env:
      MOCK_REPO: ./mock_repo
    steps:
      - uses: actions/checkout@v3
      - name: Configure test repo
        id: repo
        shell: bash
        run: |
          mkdir $MOCK_REPO
          cd $MOCK_REPO

          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

          git init
          for i in 1 2 3; do
            touch file$i
            git add file$i
            git commit -m commit_$i
          done

          cat > CHANGELOG.md <<EOF
          # Changelog
          The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
          and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

          ## Unreleased
          EOF
      - uses: ./generate-changes-file
        id: generate-changes-file
        with:
          yaml: ${{ env.MOCK_REPO }}/changes.yaml
          markdown: ${{ env.MOCK_REPO }}/CHANGELOG.md
          git-root: ${{ env.MOCK_REPO }}
          exit-code: 0
      - run: |
          if [[ "${{ steps.generate-changes-file.outputs.empty-changelog }}" != "true" ]]; then
            echo "empty-changelog should have returned true" >&2
            exit 1
          fi

  next-version:
    name: next-version action
    runs-on: ubuntu-latest
    env:
      MOCK_REPO: ./mock_repo
    steps:
      - uses: actions/checkout@v3
      - name: Configure test repo
        id: repo
        shell: bash
        run: |
          mkdir $MOCK_REPO
          cd $MOCK_REPO

          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

          git init
          for i in 1 2 3; do
            touch file$i
            git add file$i
            git commit -m commit_$i
          done
          
          git tag v1.2.3
          
          cat > changes.yaml <<EOF
          changes:
            - type: breaking
              message: this is broken
          EOF
      - uses: ./next-version
        id: next-version
        with:
          yaml: ${{ env.MOCK_REPO }}/changes.yaml
          git-root: ${{ env.MOCK_REPO }}
      - run: |
          if [[ "${{ steps.next-version.outputs.next-version }}" != "v2.0.0" ]]; then
            echo "next-version should have returned v2.0.0" >&2
            exit 1
          fi

  link-changelog:
    name: link-changelog action
    runs-on: ubuntu-latest
    env:
      MOCK_REPO: ./mock_repo
    steps:
      - uses: actions/checkout@v3
      - name: Configure test repo
        id: repo
        shell: bash
        run: |
          mkdir $MOCK_REPO
          cd $MOCK_REPO

          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

          git init
          for i in 1 2 3; do
            touch file$i
            git add file$i
            git commit -m commit_$i
          done
          
          cat > dictionary.yaml <<EOF
          dictionary:            
            infrastructure-agent: "https://github.com/newrelic/infrastructure-agent/releases/tag/{{.To.Original}}"
          EOF

          cat > changes.yaml <<EOF
          changes:
            - type: breaking
              message: this is broken
          dependencies:
            - name: infrastructure-agent
              to: v1.2.3
            - name: github.com/spf13/viper
              from: 4.0.3
              to: 4.1.2
          EOF
      - uses: ./link-changelog
        with:
          yaml: ${{ env.MOCK_REPO }}/changes.yaml
          dictionary: ${{ env.MOCK_REPO }}/dictionary.yaml
      - run: |
          cat $MOCK_REPO/changes.yaml
          
          if ! grep -e 'changelog: https://github.com/newrelic/infrastructure-agent/releases/tag/v1.2.3' $MOCK_REPO/changes.yaml; then
            echo "changes.yaml should have infrastructure-agent changelog linked" >&2
            exit 2
          fi

          if ! grep -e 'changelog: https://github.com/spf13/viper/releases/tag/4.1.2' $MOCK_REPO/changes.yaml; then
            echo "changes.yaml should have viper changelog linked" >&2
            exit 2
          fi

  render-changelog:
    name: render-changelog action
    runs-on: ubuntu-latest
    env:
      MOCK_REPO: ./mock_repo
    steps:
      - uses: actions/checkout@v3
      - name: Configure test repo
        id: repo
        shell: bash
        run: |
          mkdir $MOCK_REPO
          cd $MOCK_REPO

          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

          git init
          for i in 1 2 3; do
            touch file$i
            git add file$i
            git commit -m commit_$i
          done

          cat > changes.yaml <<EOF
          notes: |-
            ### Important announcement (note)
        
            This is a release note
          changes:
            - type: breaking
              message: Support has been removed
          EOF
          
          head -c -1 > expected-changelog.md <<EOF
          ## v1.2.3 - $(date +%Y-%m-%d)
          
          ### Important announcement (note)
          
          This is a release note
          
          ### ⚠️️ Breaking changes ⚠️
          - Support has been removed
          EOF
      - uses: ./render
        with:
          yaml: ${{ env.MOCK_REPO }}/changes.yaml
          markdown: ${{ env.MOCK_REPO }}/CHANGELOG.partial.md
          version: v1.2.3
      - run: |
          cat $MOCK_REPO/expected-changelog.md
          
          if ! cmp --silent ${{ env.MOCK_REPO }}/expected-changelog.md ${{ env.MOCK_REPO }}/CHANGELOG.partial.md; then
            echo "CHANGELOG.partial.md should be equal to the expected" >&2
            exit 2
          fi

  update-changelog:
    name: update-changelog action
    runs-on: ubuntu-latest
    env:
      MOCK_REPO: ./mock_repo
    steps:
      - uses: actions/checkout@v3
      - name: Configure test repo
        id: repo
        shell: bash
        run: |
          mkdir $MOCK_REPO
          cd $MOCK_REPO

          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

          git init
          for i in 1 2 3; do
            touch file$i
            git add file$i
            git commit -m commit_$i
          done

          cat > changes.yaml <<EOF
          notes: |-
            ### Important announcement (note)
          
            This is a release note
          changes:
            - type: breaking
              message: Support has been removed
          EOF
          
          cat > existing.md <<EOF
          # Changelog
            This is based on blah blah blah
          
          ## v1.2.3 - 20YY-DD-MM
          
          ### Enhancements
          - This is in the past and should be preserved
          EOF
          
          cat > expected-changelog.md <<EOF
          # Changelog
            This is based on blah blah blah
          
          ## v1.2.3 - $(date +%Y-%m-%d)
          
          ### Important announcement (note)
          
          This is a release note
          
          ### ⚠️️ Breaking changes ⚠️
          - Support has been removed
          
          ## v1.2.3 - 20YY-DD-MM
          
          ### Enhancements
          - This is in the past and should be preserved
          EOF
      - uses: ./update-changelog
        with:
          yaml: ${{ env.MOCK_REPO }}/changes.yaml
          markdown: ${{ env.MOCK_REPO }}/existing.md
          version: v1.2.3
      - run: |
          cat $MOCK_REPO/existing.md
          
          if ! cmp ${{ env.MOCK_REPO }}/expected-changelog.md ${{ env.MOCK_REPO }}/existing.md; then
            echo "Changleog was not updated to its expected contents" >&2
            exit 2
          fi

  validate-changelog:
    name: validate changelog action
    runs-on: ubuntu-latest
    env:
      MOCK_REPO: ./mock_repo
    steps:
      - uses: actions/checkout@v3
      - name: Configure test repo
        id: repo
        shell: bash
        run: |
          mkdir $MOCK_REPO
          cd $MOCK_REPO

          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

          git init
          for i in 1 2 3; do
            touch file$i
            git add file$i
            git commit -m commit_$i
          done
          
          cat > changelog.md <<EOF
          # Wrong-Changelog
            This is based on blah blah blah
          
          ## v1.2.3 - 20YY-DD-MM
          
          ### Enhancements
          - This is in the past and should be preserved
          EOF
      - uses: ./validate-changelog
        id: validate-changelog
        with:
          markdown: ${{ env.MOCK_REPO }}/changelog.md
          exit-code: 0
      - run: |
          if [[ "${{ steps.validate-changelog.outputs.valid }}" != "false" ]]; then
            echo "valid should have returned false" >&2
            exit 1
          fi
